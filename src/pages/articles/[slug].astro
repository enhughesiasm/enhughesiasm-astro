---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { Image } from '@astrojs/image/components';
import { getArticles } from '../../components/blog/api/fetch_articles';
import type { Post } from '../../components/blog/api/post';
import { friendlyDate } from '../../components/shared/friendly_date';
import { getMediaById } from '../../components/blog/api/fetch_media';
import { getCategories } from '../../components/blog/api/fetch_categories';
import {
	DEFAULT_WP_MEDIA_ID,
	FEATURED_WP_IMAGE_HEIGHT,
	FEATURED_WP_IMAGE_WIDTH,
	WP_PUTTYLIKE_TAG_ID,
} from '../../data/definitions';
import Categories from '../../components/blog/Categories.astro';
import LayoutPageWithSidebar from '../../layouts/Layout_Page_With_Sidebar.astro';
import ArticlesSidebar from './ArticlesSidebar.astro';
import ArticleFooter from './ArticleFooter.astro';
import { getTags } from '../../components/blog/api/fetch_tags';
import Tags from '../../components/blog/Tags.astro';
import PuttylikeAcknowledgement from '../../components/blog/PuttylikeAcknowledgement.astro';

const { slug } = Astro.params;

export type Props = {
	post: Post;
};

export async function getStaticPaths() {
	const posts = await getArticles();

	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post: post },
	}));
}

const { post } = Astro.props;
const allPosts = await getArticles();

const postIndex = allPosts.findIndex((p) => p.id === post.id);

let nextPost: Post | undefined = undefined;
if (postIndex > 0) {
	nextPost = allPosts[postIndex - 1];
}

let lastPost: Post | undefined = undefined;
if (postIndex < allPosts.length - 1) {
	lastPost = allPosts[postIndex + 1];
}

const featured_media = await getMediaById(
	post.featured_media === 0 ? DEFAULT_WP_MEDIA_ID : post.featured_media
);
const categories = (await getCategories()).filter((c) =>
	post.categories.includes(c.id)
);

const postTags = (await getTags()).filter((t) => post.tags.includes(t.id));

const isPuttylike =
	postTags.find((t) => t.id === WP_PUTTYLIKE_TAG_ID) !== undefined;
---

<BaseLayout title={`${post.title.rendered} - walking on custard`}>
	<LayoutPageWithSidebar>
		<ArticlesSidebar
			currentPost={post}
			nextPost={nextPost}
			lastPost={lastPost}
			featuredMedia={featured_media}
			slot='sidebar'
		/>
		<article class='space-y-2 md:space-y-4'>
			<h1
				class='text-center font-serif text-4xl font-bold leading-relaxed'
				set:html={post.title.rendered}
			/>
			<div class='m-0 flex flex-row justify-between p-0'>
				<Categories categories={categories.map((c) => c.name)} />
				<p
					class='text-xl text-green-950'
					set:html={friendlyDate(post.date)}
				/>
			</div>
			{
				featured_media && featured_media.source_url.length > 0 && (
					<>
						<div>
							<Image
								src={featured_media.source_url}
								alt={featured_media.alt_text}
								slot='image'
								width={FEATURED_WP_IMAGE_WIDTH}
								height={FEATURED_WP_IMAGE_HEIGHT}
							/>

							<div class='py-1 text-center text-xs italic'>
								<Fragment
									set:html={featured_media.caption.rendered}
								/>
							</div>
						</div>
					</>
				)
			}
			<div class='prose' set:html={post.content.rendered} />
			{isPuttylike && <PuttylikeAcknowledgement />}
			<ArticleFooter />
			<Tags tags={postTags.map((t) => t.name)} />
		</article>
	</LayoutPageWithSidebar>
</BaseLayout>
