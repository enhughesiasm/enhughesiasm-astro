---
import { LeftRoundArrow, RightRoundArrow } from 'iconoir-react';
import ArticleCard from '../../../components/blog/ArticleCard.astro';
import { getArticles } from '../../../components/blog/api/fetch_articles';
import type { Post } from '../../../components/blog/api/post';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import LayoutPage from '../../../layouts/Layout_Page.astro';
import { WP_API_POSTS_PER_PAGE } from '../../../data/definitions';
import { SEO } from 'astro-seo';

export async function getStaticPaths({ paginate }: { paginate: Function }) {
	const allPosts = await getArticles();

	const pages = paginate(allPosts, { pageSize: WP_API_POSTS_PER_PAGE });

	// pages[0] has page "undefined" instead of 1. Let's make it work for page 1 for either undefined or 1
	pages.push({ ...pages[0], params: { page: 1 } });

	return pages;
}

const { page } = Astro.props;
---

<BaseLayout>
	<Fragment slot='seo'>
		<SEO
			title={`Articles by Neil Hughes - page ${page.currentPage} - Walking on Custard`}
		/>
	</Fragment>
	<LayoutPage>
		<div class='flex items-center justify-center'>
			<h2
			transition:name="page-title"
				class='rounded-xl px-3 py-1 font-serif text-lg font-bold text-zinc-700 lg:px-6 lg:py-3 xl:text-3xl'
			>
				Articles by Neil Hughes
			</h2>
		</div>
		<div
			class='flex flex-row items-center justify-center space-x-1 py-3 lg:text-xl'
		>
			{
				page.url.prev && (
					<a
						class='text-blue-500 hover:text-blue-400'
						href={`${import.meta.env.BASE_URL.slice(0, -1)}${
							page.url.prev
						}`}>
						<LeftRoundArrow />
					</a>
				)
			}
			<span>{page.currentPage} / {page.lastPage}</span>
			{
				page.url.next && (
					<a
						class='text-blue-500 hover:text-blue-400'
						href={`${import.meta.env.BASE_URL.slice(0, -1)}${
							page.url.next
						}`}>
						<RightRoundArrow />
					</a>
				)
			}
		</div>

		<div
			class='mt-3 grid grid-cols-2 justify-items-center gap-3 md:mt-12 md:grid-cols-3 md:gap-9 lg:mt-6 xl:grid-cols-3'
		>
			{page.data.map((post: Post) => <ArticleCard post={post} />)}
		</div>

		<div class='mt-3 flex w-full justify-evenly py-6 lg:mt-3 lg:text-4xl'>
			<div class='flex flex-row items-center space-x-3'>
				{
					page.url.prev && (
						<a
							class='text-blue-500 hover:text-blue-400'
							href={`${import.meta.env.BASE_URL.slice(0, -1)}${
								page.url.prev
							}`}>
							<LeftRoundArrow />
						</a>
					)
				}
				<span>{page.currentPage} / {page.lastPage}</span>
				{
					page.url.next && (
						<a
							class='text-blue-500 hover:text-blue-400'
							href={`${import.meta.env.BASE_URL.slice(0, -1)}${
								page.url.next
							}`}>
							<RightRoundArrow />
						</a>
					)
				}
			</div>
		</div>
	</LayoutPage>
</BaseLayout>

